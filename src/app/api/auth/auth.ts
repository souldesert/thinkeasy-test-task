/**
 * Generated by orval v7.5.0 🍺
 * Do not edit manually.
 * ThinkEasy
 * Test Task BE
 * OpenAPI spec version: 1.0
 */
import type {
  Auth,
  LoginInput,
  RefreshResponceModel,
  RefreshTokenInput,
  SignupInput,
} from '.././_models'
import {axiosInstance} from '.././axios'

export const getAuth = () => {
  /**
   * @summary Signup a new user
   */
  const authControllerSignup = (signupInput: SignupInput) => {
    return axiosInstance<Auth>({
      url: '/auth/signup',
      method: 'POST',
      headers: {'Content-Type': 'application/json'},
      data: signupInput,
    })
  }
  /**
   * @summary Login an existing user
   */
  const authControllerLogin = (loginInput: LoginInput) => {
    return axiosInstance<Auth>({
      url: '/auth/login',
      method: 'POST',
      headers: {'Content-Type': 'application/json'},
      data: loginInput,
    })
  }
  /**
   * @summary Refresh access token using a refresh token
   */
  const authControllerRefreshToken = (refreshTokenInput: RefreshTokenInput) => {
    return axiosInstance<RefreshResponceModel>({
      url: '/auth/refresh-token',
      method: 'POST',
      headers: {'Content-Type': 'application/json'},
      data: refreshTokenInput,
    })
  }
  return {authControllerSignup, authControllerLogin, authControllerRefreshToken}
}
export type AuthControllerSignupResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getAuth>['authControllerSignup']>>
>
export type AuthControllerLoginResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getAuth>['authControllerLogin']>>
>
export type AuthControllerRefreshTokenResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getAuth>['authControllerRefreshToken']>>
>
